Search.setIndex({"docnames": ["API_docs", "documentation_pages/base", "documentation_pages/cli", "documentation_pages/compute", "documentation_pages/interface", "documentation_pages/models", "documentation_pages/protocols", "documentation_pages/security", "documentation_pages/settings", "documentation_pages/storage", "documentation_pages/strategies", "documentation_pages/strategist", "index", "overview"], "filenames": ["API_docs.rst", "documentation_pages/base.rst", "documentation_pages/cli.rst", "documentation_pages/compute.rst", "documentation_pages/interface.rst", "documentation_pages/models.rst", "documentation_pages/protocols.rst", "documentation_pages/security.rst", "documentation_pages/settings.rst", "documentation_pages/storage.rst", "documentation_pages/strategies.rst", "documentation_pages/strategist.rst", "index.rst", "overview.rst"], "titles": ["API Documentation", "Reusable components for API services. \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.base.api</span></code>", "Command line interface \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.cli</span></code>", "AlchemiscaleComputeAPI \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.compute.api</span></code>", "AlchemiscaleClientAPI \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.interface.api</span></code>", "Data models \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.models</span></code>", "Nonequilibrium Cycling protocol \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.protocols.nonequilibrium_cycling</span></code>", "Security components for APIs. \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.security.auth</span></code>", "Settings \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.settings</span></code>", "Data models for storage components \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.storage.models</span></code>", "Alchemical strategy base class. \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.strategies.base</span></code>", "Strategist service. \u2014 <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">alchemiscale.strategist.service</span></code>", "Welcome to alchemiscale\u2019s documentation!", "Overview"], "terms": {"reusabl": 0, "compon": 0, "servic": [0, 4, 9], "alchemiscal": 0, "base": [0, 2, 3, 4, 5, 6, 7, 8, 9], "querygufehandl": [0, 1], "validate_scop": [0, 1], "validate_scopes_queri": [0, 1], "class": [0, 2, 3, 4, 5, 6, 8, 9], "client": 0, "alchemiscalebasecli": [0, 1, 3, 4], "alchemiscalebaseclienterror": [0, 1, 3, 4], "alchemiscalecomputeapi": 0, "comput": [0, 4, 9, 12], "interact": 0, "alchemiscalecomputecli": [0, 3], "alchemiscalecomputeclienterror": [0, 3], "alchemiscalecomputeservic": [0, 9], "asynchronouscomputeservic": [0, 3], "interruptablesleep": [0, 3], "sleepinterrupt": [0, 3], "synchronouscomputeservic": [0, 3], "alchemiscaleclientapi": 0, "interfac": 0, "user": [0, 9], "face": 0, "alchemiscalecli": [0, 4], "alchemiscaleclienterror": [0, 4], "nonequilibrium": 0, "cycl": 0, "protocol": [0, 3, 9], "nonequilibrium_cycl": 0, "fahopenmmnonequilibriumcyclingprotocol": [0, 6], "fahopenmmnonequilibriumcyclingresult": [0, 6], "secur": [0, 9], "auth": 0, "authenticationerror": [0, 7], "data": [0, 1], "model": [0, 1], "storag": 0, "computekei": [0, 9], "objectstoreref": [0, 9], "task": [0, 3, 9], "taskarch": [0, 9], "taskqueu": [0, 3, 9, 11], "taskstatusenum": [0, 9], "s3": [0, 8], "object": [0, 1, 2, 3, 5, 8], "objectstor": 0, "s3objectstor": [0, 8, 9], "s3objectstoreerror": [0, 9], "get_s3o": [0, 9], "node4j": 0, "state": [0, 5], "statestor": 0, "alchemiscalestatestor": [0, 9], "neo4jstoreerror": [0, 9], "neo4jstor": [0, 9], "get_n4j": [0, 9], "alchem": 0, "strategi": [0, 4, 9, 11], "strategist": 0, "command": 0, "line": 0, "cli": 0, "apiappl": [0, 2], "envvar_dictifi": [0, 2], "get_settings_from_opt": [0, 2], "invalidscopeerror": [0, 5], "scopedkei": [0, 3, 4, 5, 9], "set": [0, 2, 9], "apiset": [0, 8], "baseapiset": [0, 8], "computeapiset": [0, 8], "frozenset": [0, 8], "jwtset": [0, 8], "neo4jstoreset": [0, 8, 9], "s3objectstoreset": [0, 8, 9], "return_guf": [1, 3, 9], "bool": [1, 4, 9], "helper": 1, "provid": [1, 9], "singl": [1, 9], "dispatch": 1, "like": [1, 3], "handl": [1, 3], "queri": [1, 9], "oper": 1, "sinc": [1, 9], "thei": [1, 2, 8], "can": [1, 3, 9], "return": [1, 2, 3, 4, 9], "list": [1, 3, 4, 8, 9], "dict": [1, 2, 9], "scope": [1, 3, 4, 5, 9], "token": 1, "tokendata": 1, "none": [1, 2, 3, 8, 9], "verifi": 1, "ha": [1, 2, 3, 9], "specifi": [1, 3, 9], "encod": 1, "directli": [1, 9], "i": [1, 2, 3, 6, 9, 12, 13], "access": [1, 8, 9], "via": 1, "hierarchi": 1, "query_scop": 1, "as_str": 1, "fals": [1, 3, 4, 9], "str": [1, 3, 5, 8, 9], "creat": [1, 2, 9], "intersect": 1, "where": [1, 8, 9], "mai": [1, 9], "includ": [1, 9], "all": [1, 2, 3, 9], "wildcard": [1, 5], "No": 1, "outsid": 1, "those": 1, "If": [1, 3, 4, 8, 9], "true": [1, 4, 9], "rather": 1, "than": [1, 9], "api_url": [1, 3, 4], "identifi": [1, 3, 4, 5, 9], "kei": [1, 3, 4, 9], "max_retri": [1, 3, 4], "5": [1, 3, 4], "except": [1, 3, 4, 5, 7, 9], "app": 2, "worker": 2, "bind": 2, "baseappl": 2, "load_config": 2, "thi": [2, 3, 5, 6, 9, 12, 13], "method": [2, 9], "us": [2, 3, 8, 9, 12], "load": 2, "configur": [2, 3], "from": [2, 3, 8, 9], "one": [2, 9], "sever": 2, "input": [2, 9], "": [2, 3, 4, 9, 11], "custom": 2, "file": 2, "you": 2, "have": [2, 9], "overrid": 2, "your": 2, "ctx": 2, "param": 2, "valu": [2, 9], "callback": 2, "envvar": 2, "ensur": [2, 9], "name": [2, 3, 9], "onli": [2, 9], "enter": 2, "string": 2, "onc": 2, "within": [2, 9], "click": 2, "system": 2, "It": [2, 12], "requir": [2, 9], "paramet": [2, 3, 4, 9], "attach": 2, "defin": 2, "its": [2, 9], "kwarg": [2, 6, 9, 10], "settings_cl": 2, "first": [2, 9], "strip": 2, "item": [2, 9], "which": [2, 9], "default": 2, "so": [2, 3], "don": [2, 8], "t": [2, 8, 9], "claim_taskqueue_task": [3, 9], "claimant": [3, 9], "count": [3, 9], "int": [3, 8, 9], "1": [3, 8, 9], "claim": [3, 9], "get_taskqueue_task": [3, 9], "get": [3, 4, 9], "given": [3, 4, 9], "query_taskqueu": [3, 9], "limit": 3, "skip": 3, "correspond": [3, 9], "object_stor": 3, "fah_work_serv": 3, "fold": [3, 12], "home": [3, 12], "design": [3, 12], "product": [3, 12], "start": [3, 9], "keep": 3, "go": 3, "until": 3, "told": 3, "stop": 3, "asynchron": 3, "case": [3, 8], "though": 3, "doe": [3, 9], "make": 3, "A": [3, 9], "sleep": 3, "interrupt": 3, "thread": 3, "event": 3, "wake": 3, "up": 3, "befor": [3, 9], "entir": 3, "durat": 3, "run": [3, 12], "an": [3, 4, 8, 9, 13], "rais": [3, 9], "functor": 3, "instanc": [3, 9], "pass": 3, "delai": 3, "function": [3, 9], "python": 3, "sched": 3, "schedul": 3, "baseexcept": 3, "signal": 3, "wa": 3, "keyboardinterrupt": 3, "deriv": 3, "prevent": 3, "being": 3, "shared_path": 3, "path": [3, 9], "sleep_interv": 3, "30": 3, "heartbeat_frequ": 3, "fulli": 3, "synchron": 3, "intend": [3, 9], "refer": [3, 9], "implement": 3, "test": 3, "debug": 3, "execut": 3, "protocoldagresult": [3, 4, 9], "follow": [3, 9], "push": [3, 9], "databas": [3, 9], "get_task": 3, "avail": [3, 9], "match": [3, 8, 9], "heartbeat": 3, "deliv": 3, "indic": [3, 9], "still": 3, "aliv": 3, "task_limit": 3, "number": [3, 9], "complet": [3, 9], "exit": 3, "continu": 3, "task_to_protocoldag": 3, "protocoldag": [3, 9], "produc": 3, "create_network": [4, 9], "network": [4, 9], "alchemicalnetwork": [4, 9, 11], "submit": 4, "along": 4, "get_transformation_result": 4, "transform": [4, 6, 9], "return_protocoldagresult": 4, "protocolresult": [4, 6], "The": [4, 9], "retriev": 4, "result": [4, 9], "raw": 4, "instead": [4, 8, 9], "process": 4, "valueerror": 5, "gufe_kei": 5, "gufekei": 5, "org": 5, "campaign": [5, 12], "project": 5, "basemodel": [5, 9], "uniqu": [5, 9], "gufetokeniz": [5, 9, 10], "store": [5, 9], "For": 5, "cannot": 5, "contain": [5, 8], "In": 5, "other": [5, 8, 9], "word": 5, "must": [5, 9], "specif": 5, "arg": [6, 9, 10], "perform": 6, "pers": 6, "nonequilibriumcyclingprotocol": 6, "_env_fil": 8, "pathlik": 8, "tupl": [8, 9], "_env_file_encod": 8, "_env_nested_delimit": 8, "_secrets_dir": 8, "jwt_secret_kei": 8, "jwt_expire_second": 8, "1800": 8, "jwt_algorithm": 8, "hs256": 8, "aws_access_key_id": 8, "aws_secret_access_kei": 8, "aws_session_token": 8, "aws_s3_bucket": 8, "aws_s3_prefix": 8, "aws_default_region": 8, "neo4j_url": 8, "neo4j_dbnam": 8, "neo4j": [8, 9], "neo4j_us": 8, "neo4j_pass": 8, "fa_api_host": 8, "127": 8, "0": [8, 9], "fa_api_port": 8, "80": 8, "fa_api_loglevel": 8, "info": 8, "automat": 8, "popul": [8, 11], "environ": 8, "variabl": 8, "insensit": 8, "fa_compute_api_host": 8, "fa_compute_api_port": 8, "fa_compute_api_loglevel": 8, "baseset": 8, "deploi": 8, "api": [8, 12], "ec2": 8, "host": 8, "role": 8, "resourc": 8, "e": 8, "g": 8, "ec": 8, "reli": 8, "iam": 8, "grant": 8, "gener": 9, "node": 9, "statu": 9, "type": 9, "prioriti": 9, "highest": 9, "larger": 9, "lower": 9, "constraint": 9, "weight": 9, "between": 9, "give": 9, "alloc": 9, "attent": 9, "rel": 9, "computeservic": 9, "equal": 9, "greater": 9, "anoth": 9, "receiv": 9, "more": 9, "effect": 9, "disabl": 9, "float": 9, "enum": 9, "enumer": 9, "session": 9, "boto3": 9, "bucket": 9, "prefix": 9, "aw": 9, "check": 9, "consist": 9, "initi": 9, "exist": 9, "iter_cont": 9, "iter": 9, "over": 9, "label": 9, "content": 9, "without": 9, "metadata": 9, "pull_protocoldagresult": 9, "return_a": 9, "gufe": 9, "pull": 9, "serial": 9, "json": 9, "form": 9, "avoid": 9, "unnecessari": 9, "deseri": 9, "desir": 9, "push_protocoldagresult": 9, "reset": 9, "remov": 9, "delet": 9, "itself": 9, "conveni": 9, "abc": 9, "graph": 9, "py2neo": 9, "add_scop": 9, "cl": 9, "credentialedent": 9, "add": 9, "entiti": 9, "Will": 9, "ani": [9, 12], "fail": 9, "accord": 9, "scheme": 9, "queue": 9, "2": 9, "otherwis": 9, "place": 9, "transact": 9, "create_credentialed_ent": 9, "new": 9, "credenti": 9, "ident": 9, "same": 9, "alreadi": 9, "overwrit": 9, "properti": 9, "target": 9, "even": 9, "some": 9, "create_task": 9, "extend_from": 9, "note": 9, "ignor": 9, "point": 9, "eventu": 9, "call": 9, "create_taskqueu": 9, "associ": 9, "doesn": 9, "either": 9, "wai": 9, "delete_network": 9, "chemicalsystem": 9, "delete_task": 9, "also": 9, "part": 9, "administr": 9, "should": 9, "retain": 9, "delete_taskqueu": 9, "dequeue_taskqueue_task": 9, "repres": 9, "mani": 9, "get_credentialed_ent": 9, "get_task_transform": 9, "extend": 9, "present": 9, "get_taskqueu": 9, "queu": 9, "order": 9, "structur": 9, "ar": 9, "prior": 9, "list_credentialed_ent": 9, "list_scop": 9, "query_chemicalsystem": 9, "attribut": 9, "query_network": 9, "criteria": 9, "query_transform": 9, "chemical_system": 9, "queue_taskqueue_task": 9, "relationship": 9, "ad": 9, "remove_credentialed_ident": 9, "remove_scop": 9, "undo": 9, "set_strategi": 9, "set_task_result": 9, "set_task": 9, "fix": 9, "against": 9, "total": 9, "readonli": 9, "ignore_except": 9, "context": 9, "manag": 9, "appli": 11, "packag": 12, "larg": 12, "scale": 12, "free": 12, "energi": 12, "fah": [12, 13], "distribut": 12, "platform": 12, "maximum": 12, "interoper": 12, "open": 12, "molecular": 12, "softwar": 12, "foundat": 12, "stack": 12, "built": 12, "top": 12, "openmm": 12, "openforcefield": 12, "openfreeenergi": 12, "pre": 12, "alpha": 12, "under": 12, "activ": 12, "develop": 12, "yet": 12, "readi": 12, "liabl": 12, "chang": 12, "rapidli": 12, "time": 12, "overview": 12, "index": 12, "modul": 12, "search": 12, "page": 12, "alchemi": 13, "concept": 13}, "objects": {"alchemiscale.base": [[1, 0, 0, "-", "api"], [1, 0, 0, "-", "client"]], "alchemiscale.base.api": [[1, 1, 1, "", "QueryGUFEHandler"], [1, 2, 1, "", "validate_scopes"], [1, 2, 1, "", "validate_scopes_query"]], "alchemiscale.base.client": [[1, 1, 1, "", "AlchemiscaleBaseClient"], [1, 3, 1, "", "AlchemiscaleBaseClientError"]], "alchemiscale": [[2, 0, 0, "-", "cli"], [5, 0, 0, "-", "models"], [8, 0, 0, "-", "settings"]], "alchemiscale.cli": [[2, 1, 1, "", "ApiApplication"], [2, 2, 1, "", "envvar_dictify"], [2, 2, 1, "", "get_settings_from_options"]], "alchemiscale.cli.ApiApplication": [[2, 4, 1, "", "load_config"]], "alchemiscale.compute": [[3, 0, 0, "-", "api"], [3, 0, 0, "-", "client"], [3, 0, 0, "-", "service"]], "alchemiscale.compute.client": [[3, 1, 1, "", "AlchemiscaleComputeClient"], [3, 3, 1, "", "AlchemiscaleComputeClientError"]], "alchemiscale.compute.client.AlchemiscaleComputeClient": [[3, 4, 1, "", "claim_taskqueue_tasks"], [3, 4, 1, "", "get_taskqueue_tasks"], [3, 4, 1, "", "query_taskqueues"]], "alchemiscale.compute.service": [[3, 1, 1, "", "AlchemiscaleComputeService"], [3, 1, 1, "", "AsynchronousComputeService"], [3, 1, 1, "", "InterruptableSleep"], [3, 3, 1, "", "SleepInterrupted"], [3, 1, 1, "", "SynchronousComputeService"]], "alchemiscale.compute.service.AlchemiscaleComputeService": [[3, 4, 1, "", "start"]], "alchemiscale.compute.service.AsynchronousComputeService": [[3, 4, 1, "", "start"]], "alchemiscale.compute.service.SynchronousComputeService": [[3, 4, 1, "", "execute"], [3, 4, 1, "", "get_tasks"], [3, 4, 1, "", "heartbeat"], [3, 4, 1, "", "start"], [3, 4, 1, "", "task_to_protocoldag"]], "alchemiscale.interface": [[4, 0, 0, "-", "api"], [4, 0, 0, "-", "client"]], "alchemiscale.interface.client": [[4, 1, 1, "", "AlchemiscaleClient"], [4, 3, 1, "", "AlchemiscaleClientError"]], "alchemiscale.interface.client.AlchemiscaleClient": [[4, 4, 1, "", "create_network"], [4, 4, 1, "", "get_transformation_result"]], "alchemiscale.models": [[5, 3, 1, "", "InvalidScopeError"], [5, 1, 1, "", "ScopedKey"]], "alchemiscale.protocols": [[6, 0, 0, "-", "nonequilibrium_cycling"]], "alchemiscale.protocols.nonequilibrium_cycling": [[6, 1, 1, "", "FAHOpenmmNonEquilibriumCyclingProtocol"], [6, 1, 1, "", "FAHOpenmmNonEquilibriumCyclingResult"]], "alchemiscale.security": [[7, 0, 0, "-", "auth"], [7, 0, 0, "-", "models"]], "alchemiscale.security.auth": [[7, 3, 1, "", "AuthenticationError"]], "alchemiscale.settings": [[8, 1, 1, "", "APISettings"], [8, 1, 1, "", "BaseAPISettings"], [8, 1, 1, "", "ComputeAPISettings"], [8, 1, 1, "", "FrozenSettings"], [8, 1, 1, "", "JWTSettings"], [8, 1, 1, "", "Neo4jStoreSettings"], [8, 1, 1, "", "S3ObjectStoreSettings"]], "alchemiscale.storage": [[9, 0, 0, "-", "models"], [9, 0, 0, "-", "objectstore"], [9, 0, 0, "-", "statestore"]], "alchemiscale.storage.models": [[9, 1, 1, "", "ComputeKey"], [9, 1, 1, "", "ObjectStoreRef"], [9, 1, 1, "", "Task"], [9, 1, 1, "", "TaskArchive"], [9, 1, 1, "", "TaskQueue"], [9, 1, 1, "", "TaskStatusEnum"]], "alchemiscale.storage.models.Task": [[9, 5, 1, "", "claim"], [9, 5, 1, "", "priority"], [9, 5, 1, "", "status"]], "alchemiscale.storage.models.TaskQueue": [[9, 5, 1, "", "network"], [9, 5, 1, "", "weight"]], "alchemiscale.storage.objectstore": [[9, 1, 1, "", "S3ObjectStore"], [9, 3, 1, "", "S3ObjectStoreError"], [9, 2, 1, "", "get_s3os"]], "alchemiscale.storage.objectstore.S3ObjectStore": [[9, 4, 1, "", "check"], [9, 4, 1, "", "initialize"], [9, 4, 1, "", "iter_contents"], [9, 4, 1, "", "pull_protocoldagresult"], [9, 4, 1, "", "push_protocoldagresult"], [9, 4, 1, "", "reset"]], "alchemiscale.storage.statestore": [[9, 1, 1, "", "AlchemiscaleStateStore"], [9, 3, 1, "", "Neo4JStoreError"], [9, 1, 1, "", "Neo4jStore"], [9, 2, 1, "", "get_n4js"]], "alchemiscale.storage.statestore.Neo4jStore": [[9, 4, 1, "", "add_scope"], [9, 4, 1, "", "check"], [9, 4, 1, "", "claim_taskqueue_tasks"], [9, 4, 1, "", "create_credentialed_entity"], [9, 4, 1, "", "create_network"], [9, 4, 1, "", "create_task"], [9, 4, 1, "", "create_taskqueue"], [9, 4, 1, "", "delete_network"], [9, 4, 1, "", "delete_task"], [9, 4, 1, "", "delete_taskqueue"], [9, 4, 1, "", "dequeue_taskqueue_tasks"], [9, 4, 1, "", "get_credentialed_entity"], [9, 4, 1, "", "get_task_transformation"], [9, 4, 1, "", "get_taskqueue"], [9, 4, 1, "", "get_taskqueue_tasks"], [9, 4, 1, "", "initialize"], [9, 4, 1, "", "list_credentialed_entities"], [9, 4, 1, "", "list_scopes"], [9, 4, 1, "", "query_chemicalsystems"], [9, 4, 1, "", "query_networks"], [9, 4, 1, "", "query_taskqueues"], [9, 4, 1, "", "query_transformations"], [9, 4, 1, "", "queue_taskqueue_tasks"], [9, 4, 1, "", "remove_credentialed_identity"], [9, 4, 1, "", "remove_scope"], [9, 4, 1, "", "reset"], [9, 4, 1, "", "set_strategy"], [9, 4, 1, "", "set_task_result"], [9, 4, 1, "", "set_tasks"], [9, 4, 1, "", "transaction"]], "alchemiscale.strategies": [[10, 0, 0, "-", "base"]], "alchemiscale.strategies.base": [[10, 1, 1, "", "Strategy"]], "alchemiscale.strategist": [[11, 0, 0, "-", "service"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:exception", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 1, 3, 4, 7], "document": [0, 12], "content": [0, 12], "reusabl": 1, "compon": [1, 7, 9], "servic": [1, 3, 11], "alchemiscal": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "base": [1, 10], "class": [1, 10], "client": [1, 3, 4], "command": 2, "line": 2, "interfac": [2, 4], "cli": 2, "alchemiscalecomputeapi": 3, "comput": 3, "interact": [3, 4], "alchemiscalecomputeservic": 3, "alchemiscaleclientapi": 4, "user": 4, "face": 4, "data": [5, 7, 9], "model": [5, 7, 9], "nonequilibrium": 6, "cycl": 6, "protocol": 6, "nonequilibrium_cycl": 6, "secur": 7, "auth": 7, "set": 8, "storag": 9, "s3": 9, "object": 9, "objectstor": 9, "node4j": 9, "state": 9, "statestor": 9, "alchem": 10, "strategi": 10, "strategist": 11, "welcom": 12, "": 12, "indic": 12, "tabl": 12, "overview": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Contents:": [[0, null], [12, null]], "Reusable components for API services. \u2014 alchemiscale.base.api": [[1, "reusable-components-for-api-services-alchemiscale-base-api"]], "Base class for API clients \u2014 alchemiscale.base.client": [[1, "base-class-for-api-clients-alchemiscale-base-client"]], "Command line interface \u2014 alchemiscale.cli": [[2, "command-line-interface-alchemiscale-cli"]], "AlchemiscaleComputeAPI \u2014 alchemiscale.compute.api": [[3, "alchemiscalecomputeapi-alchemiscale-compute-api"]], "Client for interacting with compute API. \u2014 alchemiscale.compute.client": [[3, "client-for-interacting-with-compute-api-alchemiscale-compute-client"]], "AlchemiscaleComputeService \u2014 alchemiscale.compute.service": [[3, "alchemiscalecomputeservice-alchemiscale-compute-service"]], "AlchemiscaleClientAPI \u2014 alchemiscale.interface.api": [[4, "alchemiscaleclientapi-alchemiscale-interface-api"]], "Client for interacting with user-facing API. \u2014 alchemiscale.interface.client": [[4, "client-for-interacting-with-user-facing-api-alchemiscale-interface-client"]], "Data models \u2014 alchemiscale.models": [[5, "data-models-alchemiscale-models"]], "Nonequilibrium Cycling protocol \u2014 alchemiscale.protocols.nonequilibrium_cycling": [[6, "nonequilibrium-cycling-protocol-alchemiscale-protocols-nonequilibrium-cycling"]], "Security components for APIs. \u2014 alchemiscale.security.auth": [[7, "security-components-for-apis-alchemiscale-security-auth"]], "Data models for security components \u2014 alchemiscale.security.models": [[7, "data-models-for-security-components-alchemiscale-security-models"]], "Settings \u2014 alchemiscale.settings": [[8, "settings-alchemiscale-settings"]], "Data models for storage components \u2014 alchemiscale.storage.models": [[9, "data-models-for-storage-components-alchemiscale-storage-models"]], "S3 Object storage \u2014 alchemiscale.storage.objectstore": [[9, "s3-object-storage-alchemiscale-storage-objectstore"]], "Node4js state storage \u2014 alchemiscale.storage.statestore": [[9, "node4js-state-storage-alchemiscale-storage-statestore"]], "Alchemical strategy base class. \u2014 alchemiscale.strategies.base": [[10, "alchemical-strategy-base-class-alchemiscale-strategies-base"]], "Strategist service. \u2014 alchemiscale.strategist.service": [[11, "strategist-service-alchemiscale-strategist-service"]], "Welcome to alchemiscale\u2019s documentation!": [[12, "welcome-to-alchemiscale-s-documentation"]], "Indices and tables": [[12, "indices-and-tables"]], "Overview": [[13, "overview"]]}, "indexentries": {"alchemiscalebaseclient (class in alchemiscale.base.client)": [[1, "alchemiscale.base.client.AlchemiscaleBaseClient"]], "alchemiscalebaseclienterror": [[1, "alchemiscale.base.client.AlchemiscaleBaseClientError"]], "querygufehandler (class in alchemiscale.base.api)": [[1, "alchemiscale.base.api.QueryGUFEHandler"]], "alchemiscale.base.api": [[1, "module-alchemiscale.base.api"]], "alchemiscale.base.client": [[1, "module-alchemiscale.base.client"]], "module": [[1, "module-alchemiscale.base.api"], [1, "module-alchemiscale.base.client"], [2, "module-alchemiscale.cli"], [3, "module-alchemiscale.compute.api"], [3, "module-alchemiscale.compute.client"], [3, "module-alchemiscale.compute.service"], [4, "module-alchemiscale.interface.api"], [4, "module-alchemiscale.interface.client"], [5, "module-alchemiscale.models"], [6, "module-alchemiscale.protocols.nonequilibrium_cycling"], [7, "module-alchemiscale.security.auth"], [7, "module-alchemiscale.security.models"], [8, "module-alchemiscale.settings"], [9, "module-alchemiscale.storage.models"], [9, "module-alchemiscale.storage.objectstore"], [9, "module-alchemiscale.storage.statestore"], [10, "module-alchemiscale.strategies.base"], [11, "module-alchemiscale.strategist.service"]], "validate_scopes() (in module alchemiscale.base.api)": [[1, "alchemiscale.base.api.validate_scopes"]], "validate_scopes_query() (in module alchemiscale.base.api)": [[1, "alchemiscale.base.api.validate_scopes_query"]], "apiapplication (class in alchemiscale.cli)": [[2, "alchemiscale.cli.ApiApplication"]], "alchemiscale.cli": [[2, "module-alchemiscale.cli"]], "envvar_dictify() (in module alchemiscale.cli)": [[2, "alchemiscale.cli.envvar_dictify"]], "get_settings_from_options() (in module alchemiscale.cli)": [[2, "alchemiscale.cli.get_settings_from_options"]], "load_config() (alchemiscale.cli.apiapplication method)": [[2, "alchemiscale.cli.ApiApplication.load_config"]], "alchemiscalecomputeclient (class in alchemiscale.compute.client)": [[3, "alchemiscale.compute.client.AlchemiscaleComputeClient"]], "alchemiscalecomputeclienterror": [[3, "alchemiscale.compute.client.AlchemiscaleComputeClientError"]], "alchemiscalecomputeservice (class in alchemiscale.compute.service)": [[3, "alchemiscale.compute.service.AlchemiscaleComputeService"]], "asynchronouscomputeservice (class in alchemiscale.compute.service)": [[3, "alchemiscale.compute.service.AsynchronousComputeService"]], "interruptablesleep (class in alchemiscale.compute.service)": [[3, "alchemiscale.compute.service.InterruptableSleep"]], "sleepinterrupted": [[3, "alchemiscale.compute.service.SleepInterrupted"]], "synchronouscomputeservice (class in alchemiscale.compute.service)": [[3, "alchemiscale.compute.service.SynchronousComputeService"]], "alchemiscale.compute.api": [[3, "module-alchemiscale.compute.api"]], "alchemiscale.compute.client": [[3, "module-alchemiscale.compute.client"]], "alchemiscale.compute.service": [[3, "module-alchemiscale.compute.service"]], "claim_taskqueue_tasks() (alchemiscale.compute.client.alchemiscalecomputeclient method)": [[3, "alchemiscale.compute.client.AlchemiscaleComputeClient.claim_taskqueue_tasks"]], "execute() (alchemiscale.compute.service.synchronouscomputeservice method)": [[3, "alchemiscale.compute.service.SynchronousComputeService.execute"]], "get_taskqueue_tasks() (alchemiscale.compute.client.alchemiscalecomputeclient method)": [[3, "alchemiscale.compute.client.AlchemiscaleComputeClient.get_taskqueue_tasks"]], "get_tasks() (alchemiscale.compute.service.synchronouscomputeservice method)": [[3, "alchemiscale.compute.service.SynchronousComputeService.get_tasks"]], "heartbeat() (alchemiscale.compute.service.synchronouscomputeservice method)": [[3, "alchemiscale.compute.service.SynchronousComputeService.heartbeat"]], "query_taskqueues() (alchemiscale.compute.client.alchemiscalecomputeclient method)": [[3, "alchemiscale.compute.client.AlchemiscaleComputeClient.query_taskqueues"]], "start() (alchemiscale.compute.service.alchemiscalecomputeservice method)": [[3, "alchemiscale.compute.service.AlchemiscaleComputeService.start"]], "start() (alchemiscale.compute.service.asynchronouscomputeservice method)": [[3, "alchemiscale.compute.service.AsynchronousComputeService.start"]], "start() (alchemiscale.compute.service.synchronouscomputeservice method)": [[3, "alchemiscale.compute.service.SynchronousComputeService.start"]], "task_to_protocoldag() (alchemiscale.compute.service.synchronouscomputeservice method)": [[3, "alchemiscale.compute.service.SynchronousComputeService.task_to_protocoldag"]], "alchemiscaleclient (class in alchemiscale.interface.client)": [[4, "alchemiscale.interface.client.AlchemiscaleClient"]], "alchemiscaleclienterror": [[4, "alchemiscale.interface.client.AlchemiscaleClientError"]], "alchemiscale.interface.api": [[4, "module-alchemiscale.interface.api"]], "alchemiscale.interface.client": [[4, "module-alchemiscale.interface.client"]], "create_network() (alchemiscale.interface.client.alchemiscaleclient method)": [[4, "alchemiscale.interface.client.AlchemiscaleClient.create_network"]], "get_transformation_result() (alchemiscale.interface.client.alchemiscaleclient method)": [[4, "alchemiscale.interface.client.AlchemiscaleClient.get_transformation_result"]], "invalidscopeerror": [[5, "alchemiscale.models.InvalidScopeError"]], "scopedkey (class in alchemiscale.models)": [[5, "alchemiscale.models.ScopedKey"]], "alchemiscale.models": [[5, "module-alchemiscale.models"]], "fahopenmmnonequilibriumcyclingprotocol (class in alchemiscale.protocols.nonequilibrium_cycling)": [[6, "alchemiscale.protocols.nonequilibrium_cycling.FAHOpenmmNonEquilibriumCyclingProtocol"]], "fahopenmmnonequilibriumcyclingresult (class in alchemiscale.protocols.nonequilibrium_cycling)": [[6, "alchemiscale.protocols.nonequilibrium_cycling.FAHOpenmmNonEquilibriumCyclingResult"]], "alchemiscale.protocols.nonequilibrium_cycling": [[6, "module-alchemiscale.protocols.nonequilibrium_cycling"]], "authenticationerror": [[7, "alchemiscale.security.auth.AuthenticationError"]], "alchemiscale.security.auth": [[7, "module-alchemiscale.security.auth"]], "alchemiscale.security.models": [[7, "module-alchemiscale.security.models"]], "apisettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.APISettings"]], "baseapisettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.BaseAPISettings"]], "computeapisettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.ComputeAPISettings"]], "frozensettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.FrozenSettings"]], "jwtsettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.JWTSettings"]], "neo4jstoresettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.Neo4jStoreSettings"]], "s3objectstoresettings (class in alchemiscale.settings)": [[8, "alchemiscale.settings.S3ObjectStoreSettings"]], "alchemiscale.settings": [[8, "module-alchemiscale.settings"]], "alchemiscalestatestore (class in alchemiscale.storage.statestore)": [[9, "alchemiscale.storage.statestore.AlchemiscaleStateStore"]], "computekey (class in alchemiscale.storage.models)": [[9, "alchemiscale.storage.models.ComputeKey"]], "neo4jstoreerror": [[9, "alchemiscale.storage.statestore.Neo4JStoreError"]], "neo4jstore (class in alchemiscale.storage.statestore)": [[9, "alchemiscale.storage.statestore.Neo4jStore"]], "objectstoreref (class in alchemiscale.storage.models)": [[9, "alchemiscale.storage.models.ObjectStoreRef"]], "s3objectstore (class in alchemiscale.storage.objectstore)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore"]], "s3objectstoreerror": [[9, "alchemiscale.storage.objectstore.S3ObjectStoreError"]], "task (class in alchemiscale.storage.models)": [[9, "alchemiscale.storage.models.Task"]], "taskarchive (class in alchemiscale.storage.models)": [[9, "alchemiscale.storage.models.TaskArchive"]], "taskqueue (class in alchemiscale.storage.models)": [[9, "alchemiscale.storage.models.TaskQueue"]], "taskstatusenum (class in alchemiscale.storage.models)": [[9, "alchemiscale.storage.models.TaskStatusEnum"]], "add_scope() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.add_scope"]], "alchemiscale.storage.models": [[9, "module-alchemiscale.storage.models"]], "alchemiscale.storage.objectstore": [[9, "module-alchemiscale.storage.objectstore"]], "alchemiscale.storage.statestore": [[9, "module-alchemiscale.storage.statestore"]], "check() (alchemiscale.storage.objectstore.s3objectstore method)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore.check"]], "check() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.check"]], "claim (alchemiscale.storage.models.task attribute)": [[9, "alchemiscale.storage.models.Task.claim"]], "claim_taskqueue_tasks() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.claim_taskqueue_tasks"]], "create_credentialed_entity() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.create_credentialed_entity"]], "create_network() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.create_network"]], "create_task() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.create_task"]], "create_taskqueue() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.create_taskqueue"]], "delete_network() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.delete_network"]], "delete_task() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.delete_task"]], "delete_taskqueue() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.delete_taskqueue"]], "dequeue_taskqueue_tasks() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.dequeue_taskqueue_tasks"]], "get_credentialed_entity() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.get_credentialed_entity"]], "get_n4js() (in module alchemiscale.storage.statestore)": [[9, "alchemiscale.storage.statestore.get_n4js"]], "get_s3os() (in module alchemiscale.storage.objectstore)": [[9, "alchemiscale.storage.objectstore.get_s3os"]], "get_task_transformation() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.get_task_transformation"]], "get_taskqueue() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.get_taskqueue"]], "get_taskqueue_tasks() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.get_taskqueue_tasks"]], "initialize() (alchemiscale.storage.objectstore.s3objectstore method)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore.initialize"]], "initialize() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.initialize"]], "iter_contents() (alchemiscale.storage.objectstore.s3objectstore method)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore.iter_contents"]], "list_credentialed_entities() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.list_credentialed_entities"]], "list_scopes() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.list_scopes"]], "network (alchemiscale.storage.models.taskqueue attribute)": [[9, "alchemiscale.storage.models.TaskQueue.network"]], "priority (alchemiscale.storage.models.task attribute)": [[9, "alchemiscale.storage.models.Task.priority"]], "pull_protocoldagresult() (alchemiscale.storage.objectstore.s3objectstore method)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore.pull_protocoldagresult"]], "push_protocoldagresult() (alchemiscale.storage.objectstore.s3objectstore method)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore.push_protocoldagresult"]], "query_chemicalsystems() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.query_chemicalsystems"]], "query_networks() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.query_networks"]], "query_taskqueues() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.query_taskqueues"]], "query_transformations() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.query_transformations"]], "queue_taskqueue_tasks() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.queue_taskqueue_tasks"]], "remove_credentialed_identity() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.remove_credentialed_identity"]], "remove_scope() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.remove_scope"]], "reset() (alchemiscale.storage.objectstore.s3objectstore method)": [[9, "alchemiscale.storage.objectstore.S3ObjectStore.reset"]], "reset() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.reset"]], "set_strategy() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.set_strategy"]], "set_task_result() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.set_task_result"]], "set_tasks() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.set_tasks"]], "status (alchemiscale.storage.models.task attribute)": [[9, "alchemiscale.storage.models.Task.status"]], "transaction() (alchemiscale.storage.statestore.neo4jstore method)": [[9, "alchemiscale.storage.statestore.Neo4jStore.transaction"]], "weight (alchemiscale.storage.models.taskqueue attribute)": [[9, "alchemiscale.storage.models.TaskQueue.weight"]], "strategy (class in alchemiscale.strategies.base)": [[10, "alchemiscale.strategies.base.Strategy"]], "alchemiscale.strategies.base": [[10, "module-alchemiscale.strategies.base"]], "alchemiscale.strategist.service": [[11, "module-alchemiscale.strategist.service"]]}})